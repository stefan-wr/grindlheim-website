html, body {
	font-family: Ubuntu, "Open Sans", sans-serif !important;
    font-size: 18px !important;
    font-weight: 400;
	color: $gr-color-txt;
	background-color: $gr-color-background;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

a {
    text-decoration: none;
    transition: linear $gr-transition-speed;

    &:hover {
        color: $gr-color-txt-hover;
    }
}

button {
    background: none;
    border: none;
    font-family: inherit;
    font-size: inherit;
    color: inherit;

    &:focus {
        outline: 0;
    }

    &:hover {
        cursor: pointer;
    }
}

.a-hover-opacity {
    &:hover {
        opacity:0.7;
    }
}

.metamorph {
	font-family: Metamorphous;
}

.center {
	text-align: center !important;
}

.left {
    text-align: left !important;
}

.bold {
    font-weight: 700 !important;
}

.resp-border-m {
    border: 2px solid white;

    @media screen and (max-width: $gr-break-m) {
        border-width: 1px;
    }
}

.txt-shadow {
    text-shadow: 0px 3px 6px rgba(0,0,0,0.2)
}


// Classes for the main content grid
.content-grid {
    display: grid;
    grid-column-gap: 8px;
    grid-template-columns: [edge-left] minmax(0.5rem, 1fr) [content-start] repeat(10, minmax(1.12rem, 6rem)) [content-end] minmax(0.5rem, 1fr) [edge-right];
    align-items: center;
    justify-content: center;

    &.on-bg {
        position: relative;
    }

    &.with-gradient{
        background: linear-gradient(rgba(0,0,0,0.25), rgba(0,0,0,0.8));
    }
}

.content-fw {
	grid-column: edge-left / span edge-right;
}

.content-nw {
	grid-column: content-start / span content-end;
}

.align-item-top {
    align-self: start;
}

.align-item-bot {
    align-self: end;
}

.grid-on-bg-container {
    position: relative;
    overflow: hidden;

    .grid-bg-image {
        color: transparent;
        position: absolute;
        top: 0px;
        left: 0px;
        z-index: 0;
        height: 100%;
        width: 100%;
        background-size: cover;
        background-repeat: none;
        overflow: hidden;

        &.blurred {
            filter: blur(20px);
        }
    }
}


// Fancy ruler
.fancy-hr {
    font-size: 0px;
    $wf: 1.8182;

    --hr-height: 25px;

    @media screen and (max-width: $gr-break-l) {
        --hr-height: 20px;
    }

    @media screen and (max-width: $gr-break-m) {
        --hr-height: 15px;
    }

    img {
        height: var(--hr-height);
        width: calc(var(--hr-height) * #{$wf});

        &.stretch {
            width: calc(100% - var(--hr-height) * #{$wf} * 2 - 0.1px);
        }
    }
}


// Mega fancy ruler
.hero-hr {
    font-size: 0;
    $tf: 0.6977;
    $bf: 0.3023;

    --hr-height: 179px;

    @media screen and (max-width: $gr-break-l) {
        --hr-height: 139px;
    }

    @media screen and (max-width: $gr-break-m) {
        --hr-height: 100px;
    }

    .head, .arrow {
        width: var(--hr-height);
    }
    
    .simple {
        height: var(--hr-height);
    }

    .top {
        height: calc(var(--hr-height) * #{$tf});
    }

    .bot {
        height: calc(var(--hr-height) * #{$bf});
    }

    .stretch {
        width: calc(100% - var(--hr-height) * 2) !important;
    }

    .stretch-w-arrow {
        width: calc((100% - var(--hr-height) * 3) / 2) !important;        
    }
}

.hr-flip {
    .bot, .top, .simple {
        transform: scaleY(-1)
    }
}


// Function for fluid font-size
@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}
  
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
        & {
            font-size: $min-font-size;
            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}


// Back button
.back {
    text-align: left;
    margin: 0.5rem 0.5rem 0px 0px;

    @media screen and (max-width: $gr-break-m) {
        margin: 0.3rem 0.3rem 0.3rem 0px;
    }

    a {
        //@extend .resp-border-m;
        border-radius: 0px 1000px 1000px 0px;
        background-color: rgba(0,0,0,0.7);
        border-left: none;
        padding: 0.08em 0.6em 0.18em 0.3em;
        transition: $gr-transition-speed ease-in;
        opacity: 0.4;

        &:hover {
            background: white;
            color: black;
            box-shadow: 0px 4px 8px $gr-color-box-shadow-light;
            opacity: 1;
        }
    }
}


// Progress Bar
.progress-bar {
    line-height: 1.1em;
    background: white;
    border: 2px solid white;
    border-radius: 1000px;
    overflow: hidden;
    box-shadow: 0px 2px 4px $gr-color-box-shadow-light;
    
    .left {
        float: right;
        font-weight: 700;
        color: $gr-color-background-light;
        padding-right: 1em;
    }

    .right {
        float: right;
        background-color: $gr-color-background-light;
        
        $progress: 61%;
        width: $progress;

        animation: breathing 4s infinite;
        @keyframes breathing {
            0%   { width: $progress; animation-timing-function: ease-in };
            50%  { width: ($progress - 2%); animation-timing-function: ease-out };
            100% { width: $progress };
        }
    }
}


// Gallery
.gallery {
    .gallery-img {
        background-position: 50% 50%;
    }

    .gallery-grid {
        height: 97vh;
        grid-template-rows: min-content min-content auto min-content;
    }

    .with-txt {
        grid-template-rows: min-content min-content 1fr auto min-content;
    }

    .gallery-loading {
        display: none;

        img {
            max-width: 40%;
        }
    }

    .gallery-txt {
        display: none;
        background-color: rgba(0,0,0,0.7);
        box-shadow: 0px 0.3em 0.6em rgba(0,0,0,0.6);
        //@extend .resp-border-m;
        border-radius: 32px;
        padding: 0.5em 0.8em 0.5em 0.8em;
        max-width: 89%;
        margin: auto;

        transform: translate(0%, +62px);

        @media screen and (max-width: $gr-break-l) {
            transform: translate(0%, +45px);
            padding: 0.4em 0.8em 0.4em 0.8em;
            border-radius: 24px;
            
        }

        @media screen and (max-width: $gr-break-m) {
            transform: translate(0%, +30px);
            padding: 0.4em 0.7em 0.4em 0.7em;
            border-radius: 17px;
        }
    }

    .gallery-nav {
        display: inline-block;
        background-color: rgba(0,0,0,0.7);
        //@extend .resp-border-m;
        border-radius: 1000px;
        transition: $gr-transition-speed ease-in;
        opacity: 0.7;
        transform: translate(0%, -62px);

        @media screen and (max-width: $gr-break-l) {
            transform: translate(0%, -49px);
        }

        @media screen and (max-width: $gr-break-m) {
            padding: 0px 0.33em;
            transform: translate(0%, -32px);
        }

        @media (hover: none) {
            box-shadow: 0px 0.2em 0.4em rgba(0,0,0,0.4);
        }

        @media (hover: hover) {
            opacity: 0.3;

            &:hover {
                opacity: 1;
                box-shadow: 0px 0.3em 0.6em rgba(0,0,0,0.6);
            }
        }

        span, button, a {
            display: inline-block;
            padding: 0.4em 0.7em 0.5em 0.7em;

            @media screen and (max-width: $gr-break-l) {
                padding: 0.3em 0.6em 0.38em 0.6em;
            }

            @media screen and (max-width: $gr-break-m) {
                padding: 0.19em 0.28em 0.26em 0.28em;
            }
        }

        button {
            transition: linear $gr-transition-speed;

            &:hover {
                color: $gr-color-txt-hover;
            }
        }
    }
}
